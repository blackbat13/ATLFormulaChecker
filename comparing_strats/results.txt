/usr/local/bin/python3.6 /Users/blackbat/PycharmProjects/ATLFormulaChecker/comparing_strats/castle_dfs_test.py
2018-08-09 15:13:53.705306
Model have 578 states
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, False], [False], [False, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, False], [False], [False, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, False], [False], [False, False]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[False, False], [False], [False, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, False], [False], [False, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[False, False], [False], [False, False]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[True, False], [False], [False, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[True, False], [False], [False, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[True, False], [False], [False, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[True, False], [False], [False, False]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[False, False], [False], [False, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[False, False], [False], [False, False]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, True], [False], [False, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, True], [False], [False, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, True], [False], [False, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[False, True], [False], [False, False]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, False], [True], [False, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, False], [True], [False, False]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[False, False], [True], [False, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, False], [True], [False, False]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, False], [False], [False, True]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, False], [False], [True, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, False], [False], [True, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, False], [False], [True, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, False], [False], [False, True]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, False], [False], [False, True]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[True, False], [False], [False, False]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[True, False], [False], [False, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[True, False], [False], [False, False]]}
Winning state: {'lifes': [0, 0, 0], 'defend': [[False, False], [False], [False, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, True], [False], [False, False]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[False, True], [False], [False, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[False, True], [False], [False, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, False], [True], [False, False]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[False, False], [False], [True, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, False], [False], [True, False]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[False, False], [False], [False, True]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, False], [False], [False, True]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[False, False], [True], [False, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[False, False], [True], [False, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[False, False], [False], [True, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[False, False], [False], [False, True]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[True, False], [False], [False, False]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[False, True], [False], [False, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[False, False], [True], [False, False]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[False, False], [False], [True, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[False, False], [False], [True, False]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[False, False], [False], [False, True]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[False, False], [False], [False, True]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[True, True], [False], [False, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[True, True], [False], [False, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[True, True], [False], [False, False]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[True, False], [True], [False, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[True, False], [True], [False, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[True, False], [True], [False, False]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[True, False], [False], [False, True]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[True, False], [False], [True, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[True, False], [False], [True, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[True, False], [False], [False, True]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, True], [True], [False, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, True], [True], [False, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, True], [True], [False, False]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, True], [False], [False, True]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, True], [False], [True, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, True], [False], [True, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, True], [False], [False, True]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, False], [True], [False, True]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, False], [True], [True, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, False], [True], [True, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, False], [True], [False, True]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[False, False], [False], [True, True]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[True, True], [False], [False, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[True, True], [False], [False, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[True, True], [False], [False, False]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[True, False], [True], [False, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[True, False], [True], [False, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[True, False], [False], [False, True]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[True, False], [False], [True, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[True, False], [False], [True, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[True, False], [False], [False, True]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[False, True], [True], [False, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, True], [True], [False, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, True], [False], [False, True]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, True], [False], [True, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, True], [False], [True, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, True], [False], [False, True]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[False, False], [True], [True, False]]}
Winning state: {'lifes': [0, 2, 0], 'defend': [[False, False], [True], [False, True]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[False, False], [False], [True, True]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[True, False], [True], [False, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[True, False], [False], [True, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[True, False], [False], [False, True]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[False, True], [True], [False, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[False, True], [False], [True, False]]}
Winning state: {'lifes': [2, 0, 0], 'defend': [[False, True], [False], [False, True]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, False], [True], [False, True]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, False], [True], [True, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, False], [True], [True, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, False], [True], [False, True]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[False, False], [False], [True, True]]}
Winning state: {'lifes': [0, 0, 0], 'defend': [[True, False], [False], [False, False]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[True, False], [True], [False, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[True, False], [True], [False, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[True, False], [False], [True, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[True, False], [False], [False, True]]}
Winning state: {'lifes': [0, 0, 0], 'defend': [[False, True], [False], [False, False]]}
Winning state: {'lifes': [0, 0, 0], 'defend': [[False, False], [True], [False, False]]}
Winning state: {'lifes': [0, 0, 0], 'defend': [[False, False], [False], [True, False]]}
Winning state: {'lifes': [0, 0, 0], 'defend': [[False, False], [False], [False, True]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[False, True], [True], [False, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[False, True], [True], [False, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[False, True], [False], [True, False]]}
Winning state: {'lifes': [1, 0, 0], 'defend': [[False, True], [False], [False, True]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[False, False], [True], [True, False]]}
Winning state: {'lifes': [0, 1, 0], 'defend': [[False, False], [True], [False, True]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[False, False], [False], [True, True]]}
Winning state: {'lifes': [2, 2, 0], 'defend': [[True, True], [True], [False, False]]}
Winning state: {'lifes': [1, 2, 0], 'defend': [[True, True], [True], [False, False]]}
Winning state: {'lifes': [2, 1, 0], 'defend': [[True, True], [True], [False, False]]}
Winning state: {'lifes': [1, 1, 0], 'defend': [[True, True], [True], [False, False]]}
Number of winning states: 120
Strategy generation time: 521.893474 seconds
Strategy result: True
[['defend', 'attack 2', 'idle'], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ['defend', 'attack 2', 'idle'], None, None, ['defend', 'attack 2', 'idle'], ['attack 2', 'defend', 'attack 2'], ['defend', 'attack 2', 'idle'], ['attack 2', 'defend', 'attack 2'], None, None, ['defend', 'attack 2', 'idle'], None, None, ['attack 2', 'attack 2', 'idle'], None, ['attack 2', 'attack 2', 'idle'], ['attack 2', 'attack 2', 'idle'], ['attack 2', 'attack 2', 'idle'], None, ['attack 2', 'attack 2', 'idle'], None, None, None, None, None, None, None, None, None, None, None, ['attack 2', 'attack 2', 'idle'], ['attack 2', 'attack 2', 'idle'], ['attack 2', 'attack 1', 'attack 2'], ['attack 2', 'attack 2', 'idle'], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ['attack 2', 'attack 2', 'idle'], None, ['attack 2', 'attack 2', 'idle'], ['attack 2', 'attack 2', 'idle'], None, ['attack 2', 'attack 2', 'idle'], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ['attack 2', 'defend', 'attack 2'], ['defend', 'attack 2', 'idle'], ['attack 2', 'defend', 'attack 2'], None, None, ['defend', 'attack 2', 'idle'], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ['defend', 'attack 2', 'idle'], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ['attack 2', 'attack 2', 'idle'], ['attack 2', 'attack 2', 'idle'], None, None, None, None, None, None, None, None, None, None, None, None, None, ['defend', 'attack 2', 'idle'], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ['attack 2', 'defend', 'attack 2'], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, ['defend', 'attack 2', 'idle'], None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]

Process finished with exit code 0
